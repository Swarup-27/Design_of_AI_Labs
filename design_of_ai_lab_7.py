# -*- coding: utf-8 -*-
"""Design_of_AI_Lab_7.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Z2R0-vQUiQlPHyOIffOgUFQwU11ugZ_U
"""

import pandas as pd
data=pd.read_csv('/content/parkinsons.data')
data.head()

data.dtypes

data.drop(['name'], axis = 1,inplace = True)

X=data.loc[:,data.columns!='status']
Y=data.loc[:,'status']

from sklearn.model_selection import train_test_split
X_train,X_test,y_train,y_test=train_test_split(X,Y,random_state=1,test_size=0.2)

from sklearn.preprocessing import StandardScaler
scaler=StandardScaler()
X_train_scaled=scaler.fit_transform(X_train)
X_test_scaled=scaler.fit_transform(X_test)

#1)KNN
from sklearn.neighbors import KNeighborsClassifier
knn=KNeighborsClassifier(n_neighbors=3,metric='minkowski',p=2)
model1=knn.fit(X_train,y_train)

y_pred1=model1.predict(X_test)

from sklearn.metrics import roc_auc_score,confusion_matrix
print(roc_auc_score(y_test,y_pred1))

cm=confusion_matrix(y_test,y_pred1)
cm

from sklearn.metrics import classification_report
print(classification_report(y_test,y_pred1))

#2) Logistic Regression
from sklearn.linear_model import LogisticRegression
lr=LogisticRegression(max_iter=1000)
model2=lr.fit(X_train,y_train)

y_pred2=model2.predict(X_test)

print(roc_auc_score(y_test,y_pred2))

cm=confusion_matrix(y_test,y_pred2)
cm

#3) SVM
from sklearn.svm import SVC
svm=SVC(kernel='linear')
model3=svm.fit(X_train,y_train)

y_pred3=model3.predict(X_test)

print(roc_auc_score(y_test,y_pred3))

cm=confusion_matrix(y_test,y_pred3)
cm