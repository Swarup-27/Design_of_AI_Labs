# -*- coding: utf-8 -*-
"""Design_of_AI_Lab_5.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1SUcuXUZnkP48zpWfpM0pFbzGpxNOVSeG
"""

import pandas as pd
import numpy as numpy
from sklearn.metrics import roc_auc_score
from sklearn.cluster import KMeans
from sklearn.cluster import AgglomerativeClustering
from sklearn.metrics import classification_report
from sklearn.preprocessing import LabelEncoder
from sklearn.model_selection import train_test_split
from sklearn.neighbors import KNeighborsClassifier

import pandas as pd
data=pd.read_csv('/content/StudentsPerformance.csv')
data

from sklearn.preprocessing import LabelEncoder
encoder=LabelEncoder()
data['gender']=encoder.fit_transform(data['gender'])
data['race/ethnicity']=encoder.fit_transform(data['race/ethnicity'])
data['parental level of education']=encoder.fit_transform(data['parental level of education'])
data['lunch']=encoder.fit_transform(data['lunch'])
data['test preparation course']=encoder.fit_transform(data['test preparation course'])

data

data['gender'].value_counts()

#1) Kmeans Clustering
X = data[['math score', 'reading score', 'writing score']]
Y=data['gender'].values

from sklearn.preprocessing import StandardScaler
from sklearn.metrics import roc_auc_score
# Standardize the data
scaler = StandardScaler()
X = scaler.fit_transform(X)

# K-Means Clustering
kmeans = KMeans(n_clusters=2, random_state=42)
kmeans.fit(X)
kmeans_labels = kmeans.labels_
kmeans_accuracy = roc_auc_score(Y, kmeans_labels)
print(kmeans_accuracy)

y_pred = kmeans.labels_
print(classification_report(Y, y_pred))

# K-Nearest Neighbors (KNN)
knn = KNeighborsClassifier(n_neighbors=2)
knn.fit(X, Y)
knn_predictions = knn.predict(X)
knn_accuracy = roc_auc_score(Y, knn_predictions)

print("\nK-Nearest Neighbors (KNN):")
print("Accuracy:", knn_accuracy)

print(classification_report(Y,knn_predictions))
print(knn_predictions)

# Hierarchical Clustering
hierarchical = AgglomerativeClustering(n_clusters=2)
hierarchical.fit(X)
hierarchical_labels = hierarchical.labels_
hierarchical_accuracy = roc_auc_score(Y, hierarchical_labels)

print("\nHierarchical Clustering:")
print("Accuracy:", hierarchical_accuracy)

print(classification_report(Y,hierarchical_labels))